/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./app/bin/app/app.js":
/*!****************************!*\
  !*** ./app/bin/app/app.js ***!
  \****************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.delay = delay;\nexports.onLoesungClick = onLoesungClick;\nexports.onKeyDown = onKeyDown;\nexports.showResults = showResults;\nexports.display = display;\nexports.closeResults = closeResults;\nexports.initGame = initGame;\nexports.onLoad = onLoad;\nconst game_1 = __webpack_require__(/*! ./game */ \"./app/bin/app/game.js\");\nconst TOP_LEFT = 0;\nconst TOP_RIGHT = 1;\nconst BOTTOM_LEFT = 2;\nconst BOTTOM_RIGHT = 3;\nconst NOT_ALLOWED = \"ignore\";\nconst CORRECT = \"success\";\nconst WRONG = \"failure\";\nconst MODE_KOOPERARTIV = 0;\nlet game;\nlet rAufgabe = document.getElementById(\"rAufgabe\");\nlet rPlayer1 = document.getElementById(\"rPlayer1\");\nlet rPlayer2 = document.getElementById(\"rPlayer2\");\nlet rPlayer3 = document.getElementById(\"rPlayer3\");\nlet rCrownPlayer1 = document.getElementById(\"rCrownPlayer1\");\nlet rCrownPlayer2 = document.getElementById(\"rCrownPlayer2\");\nlet rCrownPlayer3 = document.getElementById(\"rCrownPlayer3\");\nlet rLoesung = [\n    document.getElementById(\"rLoesung0\"),\n    document.getElementById(\"rLoesung1\"),\n    document.getElementById(\"rLoesung2\"),\n    document.getElementById(\"rLoesung3\")\n];\n/**\n * Hilfsfunktion um zu warten\n * @param ms\n */\nfunction delay(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n/**\n * navigiert zur nächsten Aufgabe\n */\nfunction navigateToNextAufgabe() {\n    //Every Aufgabe is an URL.\n    //State of the game are given with Url-Parameter\n    var url = new URL(window.location.href);\n    var search_params = url.searchParams;\n    search_params.set(\"aufgabe\", '' + (game.aufgabeNumber + 1));\n    search_params.set(\"player1\", '' + game.getPoints(game_1.MathQueenGame.PLAYER1));\n    if (game.isPlayerActive(game_1.MathQueenGame.PLAYER2)) {\n        search_params.set(\"player2\", '' + game.getPoints(game_1.MathQueenGame.PLAYER2));\n    }\n    if (game.isPlayerActive(game_1.MathQueenGame.PLAYER3)) {\n        search_params.set(\"player3\", '' + game.getPoints(game_1.MathQueenGame.PLAYER3));\n    }\n    url.search = search_params.toString();\n    window.location.href = url.href;\n}\n/**\n * Verarbeitung nach der Benutzereingabe (Maus und der Tastatur).\n * @param loesungNumber\n * @param result\n */\nfunction afterUserAction(loesungNumber, result) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // Highlight the solution with the provided result class\n        rLoesung[loesungNumber].classList.add(result);\n        switch (result) {\n            case NOT_ALLOWED:\n                yield delay(200);\n                // Remove the yellow background after 200ms for not allowed action\n                rLoesung[loesungNumber].classList.remove(result);\n                break; // player lock, do nothing\n            case CORRECT:\n                yield delay(1000);\n                // Move to the next aufgabe or show results if no tasks left\n                game.hatNochAufgaben() ? navigateToNextAufgabe() : showResults();\n                break;\n            case WRONG:\n                // Remove the red background after 200ms for wrong choice\n                yield delay(200);\n                rLoesung[loesungNumber].classList.remove(result);\n                break;\n            default:\n                console.warn(`Unknown result type: ${result}`);\n        }\n    });\n}\n/**\n * Mausklick des Spieler1\n * @param loesungNumber\n */\nfunction onLoesungClick(loesungNumber) {\n    let result = game.onPlayerInput(loesungNumber, game_1.MathQueenGame.PLAYER1);\n    afterUserAction(loesungNumber, result);\n}\n/**\n * Tastatur Eingabe von Spieler2 und 3\n * @param event das events der tastatur mit dem gedrückten Buchstaben\n */\nfunction onKeyDown(event) {\n    var _a, _b;\n    const keyMap = {\n        'w': { loesungNumber: TOP_LEFT, player: game_1.MathQueenGame.PLAYER2 },\n        'e': { loesungNumber: TOP_RIGHT, player: game_1.MathQueenGame.PLAYER2 },\n        's': { loesungNumber: BOTTOM_LEFT, player: game_1.MathQueenGame.PLAYER2 },\n        'd': { loesungNumber: BOTTOM_RIGHT, player: game_1.MathQueenGame.PLAYER2 },\n        'i': { loesungNumber: TOP_LEFT, player: game_1.MathQueenGame.PLAYER3 },\n        'o': { loesungNumber: TOP_RIGHT, player: game_1.MathQueenGame.PLAYER3 },\n        'k': { loesungNumber: BOTTOM_LEFT, player: game_1.MathQueenGame.PLAYER3 },\n        'l': { loesungNumber: BOTTOM_RIGHT, player: game_1.MathQueenGame.PLAYER3 }\n    };\n    const key = event.key.toLowerCase();\n    const loesungNumber = (_a = keyMap[key]) === null || _a === void 0 ? void 0 : _a.loesungNumber;\n    const player = (_b = keyMap[key]) === null || _b === void 0 ? void 0 : _b.player;\n    if (loesungNumber !== undefined && player !== undefined && game.isPlayerActive(player)) {\n        const result = game.onPlayerInput(loesungNumber, player);\n        afterUserAction(loesungNumber, result);\n    }\n}\n/**\n * liest die parameter aus\n * @param name des Parameters\n */\nfunction getUrlParameter(name) {\n    name = name.replace(/[\\[]/, '\\\\[').replace(/[\\]]/, '\\\\]');\n    var regex = new RegExp('[\\\\?&]' + name + '=([^&#]*)');\n    var results = regex.exec(location.search);\n    return results === null ? '' : decodeURIComponent(results[1].replace(/\\+/g, ' '));\n}\n/**\n * Zeigt die Resulate (Spielstand) am Schluss des Quizz an.\n */\nfunction showResults() {\n    const overlay = document.getElementById(\"overlay\");\n    if (!overlay) {\n        return;\n    }\n    overlay.style.display = \"flex\"; // Show the modal\n    rPlayer1.textContent = game.getPointsMessage(game_1.MathQueenGame.PLAYER1);\n    if (game.isMultiplayerGame() && game.modeNumber !== MODE_KOOPERARTIV) {\n        if (game.isWinner(game_1.MathQueenGame.PLAYER1)) {\n            rCrownPlayer1.style.display = \"block\";\n        }\n    }\n    if (game.isPlayerActive(game_1.MathQueenGame.PLAYER2) && game.modeNumber !== MODE_KOOPERARTIV) {\n        rPlayer2.textContent = game.getPointsMessage(game_1.MathQueenGame.PLAYER2);\n        if (game.isWinner(game_1.MathQueenGame.PLAYER2)) {\n            rCrownPlayer2.style.display = \"block\";\n        }\n    }\n    if (game.isPlayerActive(game_1.MathQueenGame.PLAYER3) && game.modeNumber !== MODE_KOOPERARTIV) {\n        rPlayer3.textContent = game.getPointsMessage(game_1.MathQueenGame.PLAYER3);\n        if (game.isWinner(game_1.MathQueenGame.PLAYER3)) {\n            rCrownPlayer3.style.display = \"block\";\n        }\n    }\n}\n/**\n * Zeigt die Fragen und Antworten im HTML an\n */\nfunction display() {\n    rAufgabe.textContent = game.aufgabeItem.aufgabe;\n    rLoesung[TOP_LEFT].textContent = game.aufgabeItem.loesungen[TOP_LEFT];\n    rLoesung[TOP_RIGHT].textContent = game.aufgabeItem.loesungen[TOP_RIGHT];\n    rLoesung[BOTTOM_LEFT].textContent = game.aufgabeItem.loesungen[BOTTOM_LEFT];\n    rLoesung[BOTTOM_RIGHT].textContent = game.aufgabeItem.loesungen[BOTTOM_RIGHT];\n}\n/**\n * Schliesst die Ergebnisse\n */\nfunction closeResults() {\n    const overlay = document.getElementById(\"overlay\");\n    if (overlay) {\n        overlay.style.display = \"none\"; // Hide the modal\n    }\n    window.location.href = \"index.html\";\n}\n/**\n * Liest die parameter und initialisiert das Spiel.\n */\nfunction initGame() {\n    const aufgabeParam = +getUrlParameter('aufgabe');\n    const modeParam = getUrlParameter('mode');\n    const player1Param = getUrlParameter('player1');\n    const player2Param = getUrlParameter('player2');\n    const player3Param = getUrlParameter('player3');\n    // convert the params to number or default (number or undefined) if not set.\n    const aufgabe = aufgabeParam ? +aufgabeParam : 0;\n    const mode = modeParam ? +modeParam : 0;\n    const player1 = player1Param ? +player1Param : 0;\n    const player2 = player2Param ? +player2Param : undefined;\n    const player3 = player3Param ? +player3Param : undefined;\n    game = (mode === MODE_KOOPERARTIV\n        ? new game_1.Cooperative(aufgabe, mode, player1, player2, player3)\n        : new game_1.Fight(aufgabe, mode, player1, player2, player3));\n    display();\n}\n/**\n * wird vom game.html geladen\n */\nfunction onLoad() {\n    initGame();\n}\n\n\n//# sourceURL=webpack://EntryPoint/./app/bin/app/app.js?");

/***/ }),

/***/ "./app/bin/app/game.js":
/*!*****************************!*\
  !*** ./app/bin/app/game.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Fight = exports.Cooperative = exports.MathQueenGame = void 0;\nconst aufgaben = __webpack_require__(/*! ../jsons/aufgaben.json */ \"./app/bin/jsons/aufgaben.json\");\n/**\n * Spiellogik\n */\nclass MathQueenGame {\n    constructor(aufgabeParam, modeParam, player1Param, player2Param, player3Param) {\n        //Lock damit nur ein Spieler zur gleichen Zeit die richtige Antwort geben kann.\n        this.playerLock = false;\n        this._aufgabeNumber = aufgabeParam;\n        this._modeNumber = modeParam;\n        this._player1Score = player1Param;\n        this._player2Score = player2Param;\n        this._player3Score = player3Param;\n        //die Aufgabe wird im json anhand des index gesucht. Wenn es sie nicht gibt, wird aufgabe=0 verwendet.\n        this._aufgabeItem = aufgaben.find(x => x.value == aufgabeParam) || aufgaben[0];\n    }\n    //getters\n    get modeNumber() {\n        return this._modeNumber;\n    }\n    get aufgabeNumber() {\n        return this._aufgabeNumber;\n    }\n    get aufgabeItem() {\n        return this._aufgabeItem;\n    }\n    isTwoPlayerGame() {\n        return this._player2Score !== undefined;\n    }\n    isThreePlayerGame() {\n        return this._player3Score !== undefined;\n    }\n    isMultiplayerGame() {\n        return this._player2Score !== undefined || this._player3Score !== undefined;\n    }\n    /**\n     * Wird von Maus aus Keyboard Input aufgerufen.\n     * @param input: Der Tip (index) auf die Lösung\n     * @param player: Der Spieler der den Tip abgibt\n     */\n    onPlayerInput(input, player) {\n        if (this.playerLock) {\n            return \"ignore\";\n        }\n        this.playerLock = true;\n        if (this._aufgabeItem.loesung === input) {\n            this.winPoint(player);\n            //player lock bleibt bestehen bis zur nächsten Aufgabe\n            return \"success\";\n        }\n        else {\n            this.loosePoint(player);\n            this.playerLock = false;\n            return \"failure\";\n        }\n    }\n    isPlayerActive(player) {\n        switch (player) {\n            case MathQueenGame.PLAYER1:\n                return true;\n            case MathQueenGame.PLAYER2:\n                return this._player2Score !== undefined;\n            case MathQueenGame.PLAYER3:\n                return this._player3Score !== undefined;\n            default:\n                return false;\n        }\n    }\n    hatNochAufgaben() {\n        //Die Aufgaben beginnen bei 0,10,20,30,etc. Nach 10 Aufgaben ist das Quizz zu Ende.\n        return (this._aufgabeNumber + 1) % 10 !== 0;\n    }\n}\nexports.MathQueenGame = MathQueenGame;\n//Konstanten\nMathQueenGame.PLAYER1 = 0;\nMathQueenGame.PLAYER2 = 1;\nMathQueenGame.PLAYER3 = 2;\nclass Cooperative extends MathQueenGame {\n    constructor(aufgabeParam, modeParam, player1Param, player2Param, player3Param) {\n        super(aufgabeParam, modeParam, player1Param, player2Param, player3Param);\n        this.playerScore = this._player1Score;\n    }\n    loosePoint(player) {\n        this.playerScore--;\n    }\n    winPoint(player) {\n        this.playerScore++;\n    }\n    getPoints(player) {\n        return this.playerScore;\n    }\n    getPointsMessage(player) {\n        if (this.isMultiplayerGame()) {\n            return \"Die Spieler haben \" + this.playerScore + \" Punkte von 10\";\n        }\n        else {\n            return \"Player: \" + (player + 1) + \" hat \" + this.playerScore + \" Punkte von 10\";\n        }\n    }\n    isWinner(player) {\n        return true; // Cooperation is always the winner\n    }\n}\nexports.Cooperative = Cooperative;\nclass Fight extends MathQueenGame {\n    constructor(aufgabeParam, modeParam, player1Param, player2Param, player3Param) {\n        super(aufgabeParam, modeParam, player1Param, player2Param, player3Param);\n        this.playerScore = [];\n        this.playerScore.push(this._player1Score);\n        if (this.isPlayerActive(MathQueenGame.PLAYER2)) {\n            this.playerScore.push(this._player2Score);\n        }\n        if (this.isPlayerActive(MathQueenGame.PLAYER3)) {\n            this.playerScore.push(this._player3Score);\n        }\n    }\n    loosePoint(player) {\n        this.playerScore[player] = this.playerScore[player] - 1;\n    }\n    winPoint(player) {\n        this.playerScore[player] = this.playerScore[player] + 1;\n    }\n    getPoints(player) {\n        var _a;\n        return (_a = this.playerScore[player]) !== null && _a !== void 0 ? _a : -1000;\n    }\n    getPointsMessage(player) {\n        return \"Player: \" + (player + 1) + \" hat \" + this.playerScore[player] + \" Punkte von 10\";\n    }\n    isWinner(player) {\n        switch (player) {\n            case MathQueenGame.PLAYER1:\n                return this.getPoints(MathQueenGame.PLAYER1) > this.getPoints(MathQueenGame.PLAYER2) &&\n                    this.getPoints(MathQueenGame.PLAYER1) > this.getPoints(MathQueenGame.PLAYER3);\n            case MathQueenGame.PLAYER2:\n                return this.getPoints(MathQueenGame.PLAYER2) > this.getPoints(MathQueenGame.PLAYER1) &&\n                    this.getPoints(MathQueenGame.PLAYER2) > this.getPoints(MathQueenGame.PLAYER3);\n            case MathQueenGame.PLAYER3:\n                return this.getPoints(MathQueenGame.PLAYER3) > this.getPoints(MathQueenGame.PLAYER1) &&\n                    this.getPoints(MathQueenGame.PLAYER3) > this.getPoints(MathQueenGame.PLAYER2);\n            default:\n                return false;\n        }\n    }\n}\nexports.Fight = Fight;\n\n\n//# sourceURL=webpack://EntryPoint/./app/bin/app/game.js?");

/***/ }),

/***/ "./app/app.ts":
/*!********************!*\
  !*** ./app/app.ts ***!
  \********************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.delay = delay;\nexports.onLoesungClick = onLoesungClick;\nexports.onKeyDown = onKeyDown;\nexports.showResults = showResults;\nexports.display = display;\nexports.closeResults = closeResults;\nexports.initGame = initGame;\nexports.onLoad = onLoad;\nconst game_1 = __webpack_require__(/*! ./game */ \"./app/game.ts\");\nconst TOP_LEFT = 0;\nconst TOP_RIGHT = 1;\nconst BOTTOM_LEFT = 2;\nconst BOTTOM_RIGHT = 3;\nconst NOT_ALLOWED = \"ignore\";\nconst CORRECT = \"success\";\nconst WRONG = \"failure\";\nconst MODE_KOOPERARTIV = 0;\nlet game;\nlet rAufgabe = document.getElementById(\"rAufgabe\");\nlet rPlayer1 = document.getElementById(\"rPlayer1\");\nlet rPlayer2 = document.getElementById(\"rPlayer2\");\nlet rPlayer3 = document.getElementById(\"rPlayer3\");\nlet rCrownPlayer1 = document.getElementById(\"rCrownPlayer1\");\nlet rCrownPlayer2 = document.getElementById(\"rCrownPlayer2\");\nlet rCrownPlayer3 = document.getElementById(\"rCrownPlayer3\");\nlet rLoesung = [\n    document.getElementById(\"rLoesung0\"),\n    document.getElementById(\"rLoesung1\"),\n    document.getElementById(\"rLoesung2\"),\n    document.getElementById(\"rLoesung3\")\n];\n/**\n * Hilfsfunktion um zu warten\n * @param ms\n */\nfunction delay(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n/**\n * navigiert zur nächsten Aufgabe\n */\nfunction navigateToNextAufgabe() {\n    //Every Aufgabe is an URL.\n    //State of the game are given with Url-Parameter\n    var url = new URL(window.location.href);\n    var search_params = url.searchParams;\n    search_params.set(\"aufgabe\", '' + (game.aufgabeNumber + 1));\n    search_params.set(\"player1\", '' + game.getPoints(game_1.MathQueenGame.PLAYER1));\n    if (game.isPlayerActive(game_1.MathQueenGame.PLAYER2)) {\n        search_params.set(\"player2\", '' + game.getPoints(game_1.MathQueenGame.PLAYER2));\n    }\n    if (game.isPlayerActive(game_1.MathQueenGame.PLAYER3)) {\n        search_params.set(\"player3\", '' + game.getPoints(game_1.MathQueenGame.PLAYER3));\n    }\n    url.search = search_params.toString();\n    window.location.href = url.href;\n}\n/**\n * Verarbeitung nach der Benutzereingabe (Maus und der Tastatur).\n * @param loesungNumber\n * @param result\n */\nfunction afterUserAction(loesungNumber, result) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // Highlight the solution with the provided result class\n        rLoesung[loesungNumber].classList.add(result);\n        switch (result) {\n            case NOT_ALLOWED:\n                yield delay(200);\n                // Remove the yellow background after 200ms for not allowed action\n                rLoesung[loesungNumber].classList.remove(result);\n                break; // player lock, do nothing\n            case CORRECT:\n                yield delay(1000);\n                // Move to the next aufgabe or show results if no tasks left\n                game.hatNochAufgaben() ? navigateToNextAufgabe() : showResults();\n                break;\n            case WRONG:\n                // Remove the red background after 200ms for wrong choice\n                yield delay(200);\n                rLoesung[loesungNumber].classList.remove(result);\n                break;\n            default:\n                console.warn(`Unknown result type: ${result}`);\n        }\n    });\n}\n/**\n * Mausklick des Spieler1\n * @param loesungNumber\n */\nfunction onLoesungClick(loesungNumber) {\n    let result = game.onPlayerInput(loesungNumber, game_1.MathQueenGame.PLAYER1);\n    afterUserAction(loesungNumber, result);\n}\n/**\n * Tastatur Eingabe von Spieler2 und 3\n * @param event das events der tastatur mit dem gedrückten Buchstaben\n */\nfunction onKeyDown(event) {\n    var _a, _b;\n    const keyMap = {\n        'w': { loesungNumber: TOP_LEFT, player: game_1.MathQueenGame.PLAYER2 },\n        'e': { loesungNumber: TOP_RIGHT, player: game_1.MathQueenGame.PLAYER2 },\n        's': { loesungNumber: BOTTOM_LEFT, player: game_1.MathQueenGame.PLAYER2 },\n        'd': { loesungNumber: BOTTOM_RIGHT, player: game_1.MathQueenGame.PLAYER2 },\n        'i': { loesungNumber: TOP_LEFT, player: game_1.MathQueenGame.PLAYER3 },\n        'o': { loesungNumber: TOP_RIGHT, player: game_1.MathQueenGame.PLAYER3 },\n        'k': { loesungNumber: BOTTOM_LEFT, player: game_1.MathQueenGame.PLAYER3 },\n        'l': { loesungNumber: BOTTOM_RIGHT, player: game_1.MathQueenGame.PLAYER3 }\n    };\n    const key = event.key.toLowerCase();\n    const loesungNumber = (_a = keyMap[key]) === null || _a === void 0 ? void 0 : _a.loesungNumber;\n    const player = (_b = keyMap[key]) === null || _b === void 0 ? void 0 : _b.player;\n    if (loesungNumber !== undefined && player !== undefined && game.isPlayerActive(player)) {\n        const result = game.onPlayerInput(loesungNumber, player);\n        afterUserAction(loesungNumber, result);\n    }\n}\n/**\n * liest die parameter aus\n * @param name des Parameters\n */\nfunction getUrlParameter(name) {\n    name = name.replace(/[\\[]/, '\\\\[').replace(/[\\]]/, '\\\\]');\n    var regex = new RegExp('[\\\\?&]' + name + '=([^&#]*)');\n    var results = regex.exec(location.search);\n    return results === null ? '' : decodeURIComponent(results[1].replace(/\\+/g, ' '));\n}\n/**\n * Zeigt die Resulate (Spielstand) am Schluss des Quizz an.\n */\nfunction showResults() {\n    const overlay = document.getElementById(\"overlay\");\n    if (!overlay) {\n        return;\n    }\n    overlay.style.display = \"flex\"; // Show the modal\n    rPlayer1.textContent = game.getPointsMessage(game_1.MathQueenGame.PLAYER1);\n    if (game.isMultiplayerGame() && game.modeNumber !== MODE_KOOPERARTIV) {\n        if (game.isWinner(game_1.MathQueenGame.PLAYER1)) {\n            rCrownPlayer1.style.display = \"block\";\n        }\n    }\n    if (game.isPlayerActive(game_1.MathQueenGame.PLAYER2) && game.modeNumber !== MODE_KOOPERARTIV) {\n        rPlayer2.textContent = game.getPointsMessage(game_1.MathQueenGame.PLAYER2);\n        if (game.isWinner(game_1.MathQueenGame.PLAYER2)) {\n            rCrownPlayer2.style.display = \"block\";\n        }\n    }\n    if (game.isPlayerActive(game_1.MathQueenGame.PLAYER3) && game.modeNumber !== MODE_KOOPERARTIV) {\n        rPlayer3.textContent = game.getPointsMessage(game_1.MathQueenGame.PLAYER3);\n        if (game.isWinner(game_1.MathQueenGame.PLAYER3)) {\n            rCrownPlayer3.style.display = \"block\";\n        }\n    }\n}\n/**\n * Zeigt die Fragen und Antworten im HTML an\n */\nfunction display() {\n    rAufgabe.textContent = game.aufgabeItem.aufgabe;\n    rLoesung[TOP_LEFT].textContent = game.aufgabeItem.loesungen[TOP_LEFT];\n    rLoesung[TOP_RIGHT].textContent = game.aufgabeItem.loesungen[TOP_RIGHT];\n    rLoesung[BOTTOM_LEFT].textContent = game.aufgabeItem.loesungen[BOTTOM_LEFT];\n    rLoesung[BOTTOM_RIGHT].textContent = game.aufgabeItem.loesungen[BOTTOM_RIGHT];\n}\n/**\n * Schliesst die Ergebnisse\n */\nfunction closeResults() {\n    const overlay = document.getElementById(\"overlay\");\n    if (overlay) {\n        overlay.style.display = \"none\"; // Hide the modal\n    }\n    window.location.href = \"index.html\";\n}\n/**\n * Liest die parameter und initialisiert das Spiel.\n */\nfunction initGame() {\n    const aufgabeParam = +getUrlParameter('aufgabe');\n    const modeParam = getUrlParameter('mode');\n    const player1Param = getUrlParameter('player1');\n    const player2Param = getUrlParameter('player2');\n    const player3Param = getUrlParameter('player3');\n    // convert the params to number or default (number or undefined) if not set.\n    const aufgabe = aufgabeParam ? +aufgabeParam : 0;\n    const mode = modeParam ? +modeParam : 0;\n    const player1 = player1Param ? +player1Param : 0;\n    const player2 = player2Param ? +player2Param : undefined;\n    const player3 = player3Param ? +player3Param : undefined;\n    game = (mode === MODE_KOOPERARTIV\n        ? new game_1.Cooperative(aufgabe, mode, player1, player2, player3)\n        : new game_1.Fight(aufgabe, mode, player1, player2, player3));\n    display();\n}\n/**\n * wird vom game.html geladen\n */\nfunction onLoad() {\n    initGame();\n}\n\n\n//# sourceURL=webpack://EntryPoint/./app/app.ts?");

/***/ }),

/***/ "./app/game.ts":
/*!*********************!*\
  !*** ./app/game.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Fight = exports.Cooperative = exports.MathQueenGame = void 0;\nconst aufgaben = __webpack_require__(/*! ../jsons/aufgaben.json */ \"./jsons/aufgaben.json\");\n/**\n * Spiellogik\n */\nclass MathQueenGame {\n    constructor(aufgabeParam, modeParam, player1Param, player2Param, player3Param) {\n        //Lock damit nur ein Spieler zur gleichen Zeit die richtige Antwort geben kann.\n        this.playerLock = false;\n        this._aufgabeNumber = aufgabeParam;\n        this._modeNumber = modeParam;\n        this._player1Score = player1Param;\n        this._player2Score = player2Param;\n        this._player3Score = player3Param;\n        //die Aufgabe wird im json anhand des index gesucht. Wenn es sie nicht gibt, wird aufgabe=0 verwendet.\n        this._aufgabeItem = aufgaben.find(x => x.value == aufgabeParam) || aufgaben[0];\n    }\n    //getters\n    get modeNumber() {\n        return this._modeNumber;\n    }\n    get aufgabeNumber() {\n        return this._aufgabeNumber;\n    }\n    get aufgabeItem() {\n        return this._aufgabeItem;\n    }\n    isTwoPlayerGame() {\n        return this._player2Score !== undefined;\n    }\n    isThreePlayerGame() {\n        return this._player3Score !== undefined;\n    }\n    isMultiplayerGame() {\n        return this._player2Score !== undefined || this._player3Score !== undefined;\n    }\n    /**\n     * Wird von Maus aus Keyboard Input aufgerufen.\n     * @param input: Der Tip (index) auf die Lösung\n     * @param player: Der Spieler der den Tip abgibt\n     */\n    onPlayerInput(input, player) {\n        if (this.playerLock) {\n            return \"ignore\";\n        }\n        this.playerLock = true;\n        if (this._aufgabeItem.loesung === input) {\n            this.winPoint(player);\n            //player lock bleibt bestehen bis zur nächsten Aufgabe\n            return \"success\";\n        }\n        else {\n            this.loosePoint(player);\n            this.playerLock = false;\n            return \"failure\";\n        }\n    }\n    isPlayerActive(player) {\n        switch (player) {\n            case MathQueenGame.PLAYER1:\n                return true;\n            case MathQueenGame.PLAYER2:\n                return this._player2Score !== undefined;\n            case MathQueenGame.PLAYER3:\n                return this._player3Score !== undefined;\n            default:\n                return false;\n        }\n    }\n    hatNochAufgaben() {\n        //Die Aufgaben beginnen bei 0,10,20,30,etc. Nach 10 Aufgaben ist das Quizz zu Ende.\n        return (this._aufgabeNumber + 1) % 10 !== 0;\n    }\n}\nexports.MathQueenGame = MathQueenGame;\n//Konstanten\nMathQueenGame.PLAYER1 = 0;\nMathQueenGame.PLAYER2 = 1;\nMathQueenGame.PLAYER3 = 2;\nclass Cooperative extends MathQueenGame {\n    constructor(aufgabeParam, modeParam, player1Param, player2Param, player3Param) {\n        super(aufgabeParam, modeParam, player1Param, player2Param, player3Param);\n        this.playerScore = this._player1Score;\n    }\n    loosePoint(player) {\n        this.playerScore--;\n    }\n    winPoint(player) {\n        this.playerScore++;\n    }\n    getPoints(player) {\n        return this.playerScore;\n    }\n    getPointsMessage(player) {\n        if (this.isMultiplayerGame()) {\n            return \"Die Spieler haben \" + this.playerScore + \" Punkte von 10\";\n        }\n        else {\n            return \"Player: \" + (player + 1) + \" hat \" + this.playerScore + \" Punkte von 10\";\n        }\n    }\n    isWinner(player) {\n        return true; // Cooperation is always the winner\n    }\n}\nexports.Cooperative = Cooperative;\nclass Fight extends MathQueenGame {\n    constructor(aufgabeParam, modeParam, player1Param, player2Param, player3Param) {\n        super(aufgabeParam, modeParam, player1Param, player2Param, player3Param);\n        this.playerScore = [];\n        this.playerScore.push(this._player1Score);\n        if (this.isPlayerActive(MathQueenGame.PLAYER2)) {\n            this.playerScore.push(this._player2Score);\n        }\n        if (this.isPlayerActive(MathQueenGame.PLAYER3)) {\n            this.playerScore.push(this._player3Score);\n        }\n    }\n    loosePoint(player) {\n        this.playerScore[player] = this.playerScore[player] - 1;\n    }\n    winPoint(player) {\n        this.playerScore[player] = this.playerScore[player] + 1;\n    }\n    getPoints(player) {\n        var _a;\n        return (_a = this.playerScore[player]) !== null && _a !== void 0 ? _a : -1000;\n    }\n    getPointsMessage(player) {\n        return \"Player: \" + (player + 1) + \" hat \" + this.playerScore[player] + \" Punkte von 10\";\n    }\n    isWinner(player) {\n        switch (player) {\n            case MathQueenGame.PLAYER1:\n                return this.getPoints(MathQueenGame.PLAYER1) > this.getPoints(MathQueenGame.PLAYER2) &&\n                    this.getPoints(MathQueenGame.PLAYER1) > this.getPoints(MathQueenGame.PLAYER3);\n            case MathQueenGame.PLAYER2:\n                return this.getPoints(MathQueenGame.PLAYER2) > this.getPoints(MathQueenGame.PLAYER1) &&\n                    this.getPoints(MathQueenGame.PLAYER2) > this.getPoints(MathQueenGame.PLAYER3);\n            case MathQueenGame.PLAYER3:\n                return this.getPoints(MathQueenGame.PLAYER3) > this.getPoints(MathQueenGame.PLAYER1) &&\n                    this.getPoints(MathQueenGame.PLAYER3) > this.getPoints(MathQueenGame.PLAYER2);\n            default:\n                return false;\n        }\n    }\n}\nexports.Fight = Fight;\n\n\n//# sourceURL=webpack://EntryPoint/./app/game.ts?");

/***/ }),

/***/ "./app/bin/jsons/aufgaben.json":
/*!*************************************!*\
  !*** ./app/bin/jsons/aufgaben.json ***!
  \*************************************/
/***/ ((module) => {

eval("module.exports = /*#__PURE__*/JSON.parse('[{\"aufgabentyp\":\"Addition\",\"aufgabe\":\"14 + 7\",\"loesungen\":[\"10+10\",\"16+6\",\"21-0\",\"7*4\"],\"loesung\":2,\"value\":0},{\"aufgabentyp\":\"Subtraktion\",\"aufgabe\":\"22 - 9\",\"loesungen\":[\"14\",\"13\",\"12\",\"15\"],\"loesung\":1,\"value\":1},{\"aufgabentyp\":\"Multiplikation\",\"aufgabe\":\"4 * 6\",\"loesungen\":[\"3*8\",\"4*8\",\"5*5\",\"20+5\"],\"loesung\":0,\"value\":2},{\"aufgabentyp\":\"Division\",\"aufgabe\":\"36 / 4\",\"loesungen\":[\"9\",\"10\",\"12\",\"8\"],\"loesung\":0,\"value\":3},{\"aufgabentyp\":\"Brüche\",\"aufgabe\":\"5/6 * 12\",\"loesungen\":[\"9+1\",\"7+5\",\"6+5\",\"4*3\"],\"loesung\":0,\"value\":4},{\"aufgabentyp\":\"Potenz\",\"aufgabe\":\"3^2\",\"loesungen\":[\"7+2\",\"10\",\"3*3\",\"6+3\"],\"loesung\":2,\"value\":5},{\"aufgabentyp\":\"Wurzel\",\"aufgabe\":\"√49\",\"loesungen\":[\"8\",\"7\",\"9\",\"10\"],\"loesung\":1,\"value\":6},{\"aufgabentyp\":\"Arithmetik\",\"aufgabe\":\"5 + 8 - 3\",\"loesungen\":[\"9\",\"7+2\",\"4*2\",\"10\"],\"loesung\":3,\"value\":7},{\"aufgabentyp\":\"Addition\",\"aufgabe\":\"16 + 15\",\"loesungen\":[\"30\",\"31\",\"28\",\"29\"],\"loesung\":1,\"value\":8},{\"aufgabentyp\":\"Subtraktion\",\"aufgabe\":\"50 - 13\",\"loesungen\":[\"30+8\",\"50-20\",\"33+9\",\"37\"],\"loesung\":3,\"value\":9},{\"aufgabentyp\":\"Multiplikation\",\"aufgabe\":\"7 * 4\",\"loesungen\":[\"20+8\",\"6*4\",\"30-8\",\"7*3\"],\"loesung\":0,\"value\":10},{\"aufgabentyp\":\"Division\",\"aufgabe\":\"45 / 9\",\"loesungen\":[\"5\",\"6\",\"7\",\"8\"],\"loesung\":0,\"value\":11},{\"aufgabentyp\":\"Potenz\",\"aufgabe\":\"2^4\",\"loesungen\":[\"10\",\"8+8\",\"15\",\"12\"],\"loesung\":1,\"value\":12},{\"aufgabentyp\":\"Wurzel\",\"aufgabe\":\"√64\",\"loesungen\":[\"7\",\"8\",\"9\",\"10\"],\"loesung\":1,\"value\":13},{\"aufgabentyp\":\"Brüche\",\"aufgabe\":\"2/3 * 9\",\"loesungen\":[\"5+3\",\"7+1\",\"6\",\"4+3\"],\"loesung\":2,\"value\":14},{\"aufgabentyp\":\"Addition\",\"aufgabe\":\"9 + 6\",\"loesungen\":[\"12\",\"13\",\"14\",\"15\"],\"loesung\":3,\"value\":15},{\"aufgabentyp\":\"Subtraktion\",\"aufgabe\":\"20 - 5\",\"loesungen\":[\"10+2\",\"15\",\"5+5\",\"3+7\"],\"loesung\":1,\"value\":16},{\"aufgabentyp\":\"Multiplikation\",\"aufgabe\":\"8 * 3\",\"loesungen\":[\"24\",\"21\",\"26\",\"28\"],\"loesung\":0,\"value\":17},{\"aufgabentyp\":\"Division\",\"aufgabe\":\"81 / 9\",\"loesungen\":[\"9\",\"8\",\"10\",\"12\"],\"loesung\":0,\"value\":18},{\"aufgabentyp\":\"Potenz\",\"aufgabe\":\"4^2\",\"loesungen\":[\"12\",\"16\",\"14\",\"18\"],\"loesung\":1,\"value\":19},{\"aufgabentyp\":\"Wurzel\",\"aufgabe\":\"√100\",\"loesungen\":[\"8\",\"9\",\"10\",\"11\"],\"loesung\":2,\"value\":20},{\"aufgabentyp\":\"Addition\",\"aufgabe\":\"18 + 5\",\"loesungen\":[\"20\",\"23\",\"21\",\"22\"],\"loesung\":1,\"value\":21},{\"aufgabentyp\":\"Subtraktion\",\"aufgabe\":\"34 - 17\",\"loesungen\":[\"17\",\"16\",\"18\",\"19\"],\"loesung\":0,\"value\":22},{\"aufgabentyp\":\"Multiplikation\",\"aufgabe\":\"5 * 5\",\"loesungen\":[\"24\",\"30\",\"25\",\"26\"],\"loesung\":2,\"value\":23},{\"aufgabentyp\":\"Division\",\"aufgabe\":\"32 / 4\",\"loesungen\":[\"7\",\"8\",\"6\",\"9\"],\"loesung\":1,\"value\":24},{\"aufgabentyp\":\"Potenz\",\"aufgabe\":\"3^3\",\"loesungen\":[\"27\",\"26\",\"25\",\"24\"],\"loesung\":0,\"value\":25},{\"aufgabentyp\":\"Wurzel\",\"aufgabe\":\"√121\",\"loesungen\":[\"10\",\"11\",\"12\",\"13\"],\"loesung\":1,\"value\":26},{\"aufgabentyp\":\"Logik und Mengenlehre\",\"aufgabe\":\"A oder B\",\"loesungen\":[\"A∧B\",\"A∨B\",\"A→B\",\"¬A\"],\"loesung\":1,\"value\":27},{\"aufgabentyp\":\"Logik und Mengenlehre\",\"aufgabe\":\"A∩B A={1,2,3,4}B={3,4,5,6}\",\"loesungen\":[\"{1,3,5}\",\"{3,4}\",\"{5,6}\",\"{1,2}\"],\"loesung\":1,\"value\":28},{\"aufgabentyp\":\"Multiplikation\",\"aufgabe\":\"6 * 7\",\"loesungen\":[\"42\",\"41\",\"43\",\"44\"],\"loesung\":0,\"value\":29},{\"aufgabentyp\":\"Division\",\"aufgabe\":\"24 / 8\",\"loesungen\":[\"3\",\"2\",\"4\",\"6\"],\"loesung\":0,\"value\":30},{\"aufgabentyp\":\"Addition\",\"aufgabe\":\"2+10\",\"loesungen\":[\"1+6\",\"2+6\",\"2+2\",\"6+6\"],\"loesung\":3,\"value\":31},{\"aufgabentyp\":\"Arithmetik\",\"aufgabe\":\"3-(-5)\",\"loesungen\":[\"11\",\"-2\",\"8\",\"10\"],\"loesung\":2,\"value\":32},{\"aufgabentyp\":\"Brüche\",\"aufgabe\":\"8/5 * 2\",\"loesungen\":[\"61/5\",\"16/8\",\"61/8\",\"16/5\"],\"loesung\":3,\"value\":33},{\"aufgabentyp\":\"Arithmetik\",\"aufgabe\":\"15 + 12 - 8\",\"loesungen\":[\"19\",\"17\",\"20\",\"18\"],\"loesung\":0,\"value\":34},{\"aufgabentyp\":\"Addition\",\"aufgabe\":\"28 + 13\",\"loesungen\":[\"40\",\"41\",\"42\",\"43\"],\"loesung\":1,\"value\":35},{\"aufgabentyp\":\"Subtraktion\",\"aufgabe\":\"45 - 18\",\"loesungen\":[\"27\",\"25\",\"30\",\"28\"],\"loesung\":0,\"value\":36},{\"aufgabentyp\":\"Multiplikation\",\"aufgabe\":\"9 * 4\",\"loesungen\":[\"35\",\"36\",\"34\",\"37\"],\"loesung\":1,\"value\":37},{\"aufgabentyp\":\"Division\",\"aufgabe\":\"63 / 7\",\"loesungen\":[\"8\",\"9\",\"10\",\"11\"],\"loesung\":1,\"value\":38},{\"aufgabentyp\":\"Potenz\",\"aufgabe\":\"5^2\",\"loesungen\":[\"25\",\"24\",\"23\",\"22\"],\"loesung\":0,\"value\":39},{\"aufgabentyp\":\"Logik und Mengenlehre\",\"aufgabe\":\"C ∪ D \",\"loesungen\":[\"{a,b,c,d,e}\",\"{c,d,e}\",\"{a,b}\",\"{a,b,c}\"],\"loesung\":0,\"value\":40},{\"aufgabentyp\":\"Mengenlehre - Schnittmenge\",\"aufgabe\":\"Gegeben sind die Mengen A = {1, 2, 3, 4} und B = {3, 4, 5, 6}. Welche Elemente enthält die Schnittmenge A ∩ B?\",\"loesungen\":[\"{1, 2}\",\"{3, 4}\",\"{5, 6}\",\"{1, 3, 5}\"],\"loesung\":1,\"value\":41},{\"aufgabentyp\":\"Mengenlehre - Vereinigungsmenge\",\"aufgabe\":\"Gegeben sind die Mengen C = {a, b, c} und D = {c, d, e}. Was ist die Vereinigungsmenge C ∪ D?\",\"loesungen\":[\"{a, b, c, d, e}\",\"{c, d, e}\",\"{a, b}\",\"{a, b, c}\"],\"loesung\":0,\"value\":42},{\"aufgabentyp\":\"Logik - Tautologie\",\"aufgabe\":\"Welche der folgenden Aussagen ist eine Tautologie?\",\"loesungen\":[\"A ∧ ¬A\",\"A ∨ ¬A\",\"A → (A ∧ ¬A)\",\"¬(A ∨ ¬A)\"],\"loesung\":1,\"value\":43},{\"aufgabentyp\":\"Logik - Disjunktion\",\"aufgabe\":\"Welche der folgenden Aussagen ist eine Disjunktion?\",\"loesungen\":[\"A ∧ B\",\"A ∨ B\",\"A → B\",\"¬A\"],\"loesung\":1,\"value\":44},{\"aufgabentyp\":\"Wahrscheinlichkeitsrechnung - Würfeln\",\"aufgabe\":\"Was ist die Wahrscheinlichkeit, eine gerade Zahl zu würfeln (2, 4, 6) mit einem fairen Würfel?\",\"loesungen\":[\"1/2\",\"1/3\",\"1/6\",\"2/3\"],\"loesung\":0,\"value\":45},{\"aufgabentyp\":\"Wahrscheinlichkeitsrechnung - Münzwurf\",\"aufgabe\":\"Was ist die Wahrscheinlichkeit, bei einem fairen Münzwurf Kopf zu erhalten?\",\"loesungen\":[\"1/2\",\"1/4\",\"1/3\",\"1\"],\"loesung\":0,\"value\":46},{\"aufgabentyp\":\"Wahrscheinlichkeitsrechnung - Lotto\",\"aufgabe\":\"Was ist die Wahrscheinlichkeit, beim Lotto 6 aus 49 die richtige Zahl zu tippen?\",\"loesungen\":[\"1/49\",\"1/13983816\",\"1/100\",\"1/1000\"],\"loesung\":1,\"value\":47},{\"aufgabentyp\":\"Wahrscheinlichkeitsrechnung - Karten\",\"aufgabe\":\"Was ist die Wahrscheinlichkeit, beim Ziehen einer Karte aus einem Standarddeck (52 Karten) ein Herz zu ziehen?\",\"loesungen\":[\"1/4\",\"1/13\",\"1/52\",\"1/2\"],\"loesung\":1,\"value\":48},{\"aufgabentyp\":\"Wahrscheinlichkeitsrechnung - Karten\",\"aufgabe\":\"Was ist die Wahrscheinlichkeit, beim Ziehen einer Karte aus einem Standarddeck (52 Karten) ein Herz zu ziehen?\",\"loesungen\":[\"1/4\",\"1/13\",\"1/52\",\"1/2\"],\"loesung\":1,\"value\":49},{\"aufgabentyp\":\"Wahrscheinlichkeitsrechnung - Karten\",\"aufgabe\":\"Was ist die Wahrscheinlichkeit, beim Ziehen einer Karte aus einem Standarddeck (52 Karten) ein Herz zu ziehen?\",\"loesungen\":[\"1/4\",\"1/13\",\"1/52\",\"1/2\"],\"loesung\":1,\"value\":50}]');\n\n//# sourceURL=webpack://EntryPoint/./app/bin/jsons/aufgaben.json?");

/***/ }),

/***/ "./jsons/aufgaben.json":
/*!*****************************!*\
  !*** ./jsons/aufgaben.json ***!
  \*****************************/
/***/ ((module) => {

eval("module.exports = /*#__PURE__*/JSON.parse('[{\"aufgabentyp\":\"Addition\",\"aufgabe\":\"14 + 7\",\"loesungen\":[\"10+10\",\"16+6\",\"21-0\",\"7*4\"],\"loesung\":2,\"value\":0},{\"aufgabentyp\":\"Subtraktion\",\"aufgabe\":\"22 - 9\",\"loesungen\":[\"14\",\"13\",\"12\",\"15\"],\"loesung\":1,\"value\":1},{\"aufgabentyp\":\"Multiplikation\",\"aufgabe\":\"4 * 6\",\"loesungen\":[\"3*8\",\"4*8\",\"5*5\",\"20+5\"],\"loesung\":0,\"value\":2},{\"aufgabentyp\":\"Division\",\"aufgabe\":\"36 / 4\",\"loesungen\":[\"9\",\"10\",\"12\",\"8\"],\"loesung\":0,\"value\":3},{\"aufgabentyp\":\"Brüche\",\"aufgabe\":\"5/6 * 12\",\"loesungen\":[\"9+1\",\"7+5\",\"6+5\",\"4*3\"],\"loesung\":0,\"value\":4},{\"aufgabentyp\":\"Potenz\",\"aufgabe\":\"3^2\",\"loesungen\":[\"7+2\",\"10\",\"3*3\",\"6+3\"],\"loesung\":2,\"value\":5},{\"aufgabentyp\":\"Wurzel\",\"aufgabe\":\"√49\",\"loesungen\":[\"8\",\"7\",\"9\",\"10\"],\"loesung\":1,\"value\":6},{\"aufgabentyp\":\"Arithmetik\",\"aufgabe\":\"5 + 8 - 3\",\"loesungen\":[\"9\",\"7+2\",\"4*2\",\"10\"],\"loesung\":3,\"value\":7},{\"aufgabentyp\":\"Addition\",\"aufgabe\":\"16 + 15\",\"loesungen\":[\"30\",\"31\",\"28\",\"29\"],\"loesung\":1,\"value\":8},{\"aufgabentyp\":\"Subtraktion\",\"aufgabe\":\"50 - 13\",\"loesungen\":[\"30+8\",\"50-20\",\"33+9\",\"37\"],\"loesung\":3,\"value\":9},{\"aufgabentyp\":\"Multiplikation\",\"aufgabe\":\"7 * 4\",\"loesungen\":[\"20+8\",\"6*4\",\"30-8\",\"7*3\"],\"loesung\":0,\"value\":10},{\"aufgabentyp\":\"Division\",\"aufgabe\":\"45 / 9\",\"loesungen\":[\"5\",\"6\",\"7\",\"8\"],\"loesung\":0,\"value\":11},{\"aufgabentyp\":\"Potenz\",\"aufgabe\":\"2^4\",\"loesungen\":[\"10\",\"8+8\",\"15\",\"12\"],\"loesung\":1,\"value\":12},{\"aufgabentyp\":\"Wurzel\",\"aufgabe\":\"√64\",\"loesungen\":[\"7\",\"8\",\"9\",\"10\"],\"loesung\":1,\"value\":13},{\"aufgabentyp\":\"Brüche\",\"aufgabe\":\"2/3 * 9\",\"loesungen\":[\"5+3\",\"7+1\",\"6\",\"4+3\"],\"loesung\":2,\"value\":14},{\"aufgabentyp\":\"Addition\",\"aufgabe\":\"9 + 6\",\"loesungen\":[\"12\",\"13\",\"14\",\"15\"],\"loesung\":3,\"value\":15},{\"aufgabentyp\":\"Subtraktion\",\"aufgabe\":\"20 - 5\",\"loesungen\":[\"10+2\",\"15\",\"5+5\",\"3+7\"],\"loesung\":1,\"value\":16},{\"aufgabentyp\":\"Multiplikation\",\"aufgabe\":\"8 * 3\",\"loesungen\":[\"24\",\"21\",\"26\",\"28\"],\"loesung\":0,\"value\":17},{\"aufgabentyp\":\"Division\",\"aufgabe\":\"81 / 9\",\"loesungen\":[\"9\",\"8\",\"10\",\"12\"],\"loesung\":0,\"value\":18},{\"aufgabentyp\":\"Potenz\",\"aufgabe\":\"4^2\",\"loesungen\":[\"12\",\"16\",\"14\",\"18\"],\"loesung\":1,\"value\":19},{\"aufgabentyp\":\"Wurzel\",\"aufgabe\":\"√100\",\"loesungen\":[\"8\",\"9\",\"10\",\"11\"],\"loesung\":2,\"value\":20},{\"aufgabentyp\":\"Addition\",\"aufgabe\":\"18 + 5\",\"loesungen\":[\"20\",\"23\",\"21\",\"22\"],\"loesung\":1,\"value\":21},{\"aufgabentyp\":\"Subtraktion\",\"aufgabe\":\"34 - 17\",\"loesungen\":[\"17\",\"16\",\"18\",\"19\"],\"loesung\":0,\"value\":22},{\"aufgabentyp\":\"Multiplikation\",\"aufgabe\":\"5 * 5\",\"loesungen\":[\"24\",\"30\",\"25\",\"26\"],\"loesung\":2,\"value\":23},{\"aufgabentyp\":\"Division\",\"aufgabe\":\"32 / 4\",\"loesungen\":[\"7\",\"8\",\"6\",\"9\"],\"loesung\":1,\"value\":24},{\"aufgabentyp\":\"Potenz\",\"aufgabe\":\"3^3\",\"loesungen\":[\"27\",\"26\",\"25\",\"24\"],\"loesung\":0,\"value\":25},{\"aufgabentyp\":\"Wurzel\",\"aufgabe\":\"√121\",\"loesungen\":[\"10\",\"11\",\"12\",\"13\"],\"loesung\":1,\"value\":26},{\"aufgabentyp\":\"Logik und Mengenlehre\",\"aufgabe\":\"A oder B\",\"loesungen\":[\"A∧B\",\"A∨B\",\"A→B\",\"¬A\"],\"loesung\":1,\"value\":27},{\"aufgabentyp\":\"Logik und Mengenlehre\",\"aufgabe\":\"A∩B A={1,2,3,4}B={3,4,5,6}\",\"loesungen\":[\"{1,3,5}\",\"{3,4}\",\"{5,6}\",\"{1,2}\"],\"loesung\":1,\"value\":28},{\"aufgabentyp\":\"Multiplikation\",\"aufgabe\":\"6 * 7\",\"loesungen\":[\"42\",\"41\",\"43\",\"44\"],\"loesung\":0,\"value\":29},{\"aufgabentyp\":\"Division\",\"aufgabe\":\"24 / 8\",\"loesungen\":[\"3\",\"2\",\"4\",\"6\"],\"loesung\":0,\"value\":30},{\"aufgabentyp\":\"Addition\",\"aufgabe\":\"2+10\",\"loesungen\":[\"1+6\",\"2+6\",\"2+2\",\"6+6\"],\"loesung\":3,\"value\":31},{\"aufgabentyp\":\"Arithmetik\",\"aufgabe\":\"3-(-5)\",\"loesungen\":[\"11\",\"-2\",\"8\",\"10\"],\"loesung\":2,\"value\":32},{\"aufgabentyp\":\"Brüche\",\"aufgabe\":\"8/5 * 2\",\"loesungen\":[\"61/5\",\"16/8\",\"61/8\",\"16/5\"],\"loesung\":3,\"value\":33},{\"aufgabentyp\":\"Arithmetik\",\"aufgabe\":\"15 + 12 - 8\",\"loesungen\":[\"19\",\"17\",\"20\",\"18\"],\"loesung\":0,\"value\":34},{\"aufgabentyp\":\"Addition\",\"aufgabe\":\"28 + 13\",\"loesungen\":[\"40\",\"41\",\"42\",\"43\"],\"loesung\":1,\"value\":35},{\"aufgabentyp\":\"Subtraktion\",\"aufgabe\":\"45 - 18\",\"loesungen\":[\"27\",\"25\",\"30\",\"28\"],\"loesung\":0,\"value\":36},{\"aufgabentyp\":\"Multiplikation\",\"aufgabe\":\"9 * 4\",\"loesungen\":[\"35\",\"36\",\"34\",\"37\"],\"loesung\":1,\"value\":37},{\"aufgabentyp\":\"Division\",\"aufgabe\":\"63 / 7\",\"loesungen\":[\"8\",\"9\",\"10\",\"11\"],\"loesung\":1,\"value\":38},{\"aufgabentyp\":\"Potenz\",\"aufgabe\":\"5^2\",\"loesungen\":[\"25\",\"24\",\"23\",\"22\"],\"loesung\":0,\"value\":39},{\"aufgabentyp\":\"Logik und Mengenlehre\",\"aufgabe\":\"C ∪ D \",\"loesungen\":[\"{a,b,c,d,e}\",\"{c,d,e}\",\"{a,b}\",\"{a,b,c}\"],\"loesung\":0,\"value\":40},{\"aufgabentyp\":\"Mengenlehre - Schnittmenge\",\"aufgabe\":\"Gegeben sind die Mengen A = {1, 2, 3, 4} und B = {3, 4, 5, 6}. Welche Elemente enthält die Schnittmenge A ∩ B?\",\"loesungen\":[\"{1, 2}\",\"{3, 4}\",\"{5, 6}\",\"{1, 3, 5}\"],\"loesung\":1,\"value\":41},{\"aufgabentyp\":\"Mengenlehre - Vereinigungsmenge\",\"aufgabe\":\"Gegeben sind die Mengen C = {a, b, c} und D = {c, d, e}. Was ist die Vereinigungsmenge C ∪ D?\",\"loesungen\":[\"{a, b, c, d, e}\",\"{c, d, e}\",\"{a, b}\",\"{a, b, c}\"],\"loesung\":0,\"value\":42},{\"aufgabentyp\":\"Logik - Tautologie\",\"aufgabe\":\"Welche der folgenden Aussagen ist eine Tautologie?\",\"loesungen\":[\"A ∧ ¬A\",\"A ∨ ¬A\",\"A → (A ∧ ¬A)\",\"¬(A ∨ ¬A)\"],\"loesung\":1,\"value\":43},{\"aufgabentyp\":\"Logik - Disjunktion\",\"aufgabe\":\"Welche der folgenden Aussagen ist eine Disjunktion?\",\"loesungen\":[\"A ∧ B\",\"A ∨ B\",\"A → B\",\"¬A\"],\"loesung\":1,\"value\":44},{\"aufgabentyp\":\"Wahrscheinlichkeitsrechnung - Würfeln\",\"aufgabe\":\"Was ist die Wahrscheinlichkeit, eine gerade Zahl zu würfeln (2, 4, 6) mit einem fairen Würfel?\",\"loesungen\":[\"1/2\",\"1/3\",\"1/6\",\"2/3\"],\"loesung\":0,\"value\":45},{\"aufgabentyp\":\"Wahrscheinlichkeitsrechnung - Münzwurf\",\"aufgabe\":\"Was ist die Wahrscheinlichkeit, bei einem fairen Münzwurf Kopf zu erhalten?\",\"loesungen\":[\"1/2\",\"1/4\",\"1/3\",\"1\"],\"loesung\":0,\"value\":46},{\"aufgabentyp\":\"Wahrscheinlichkeitsrechnung - Lotto\",\"aufgabe\":\"Was ist die Wahrscheinlichkeit, beim Lotto 6 aus 49 die richtige Zahl zu tippen?\",\"loesungen\":[\"1/49\",\"1/13983816\",\"1/100\",\"1/1000\"],\"loesung\":1,\"value\":47},{\"aufgabentyp\":\"Wahrscheinlichkeitsrechnung - Karten\",\"aufgabe\":\"Was ist die Wahrscheinlichkeit, beim Ziehen einer Karte aus einem Standarddeck (52 Karten) ein Herz zu ziehen?\",\"loesungen\":[\"1/4\",\"1/13\",\"1/52\",\"1/2\"],\"loesung\":1,\"value\":48},{\"aufgabentyp\":\"Wahrscheinlichkeitsrechnung - Karten\",\"aufgabe\":\"Was ist die Wahrscheinlichkeit, beim Ziehen einer Karte aus einem Standarddeck (52 Karten) ein Herz zu ziehen?\",\"loesungen\":[\"1/4\",\"1/13\",\"1/52\",\"1/2\"],\"loesung\":1,\"value\":49},{\"aufgabentyp\":\"Wahrscheinlichkeitsrechnung - Karten\",\"aufgabe\":\"Was ist die Wahrscheinlichkeit, beim Ziehen einer Karte aus einem Standarddeck (52 Karten) ein Herz zu ziehen?\",\"loesungen\":[\"1/4\",\"1/13\",\"1/52\",\"1/2\"],\"loesung\":1,\"value\":50}]');\n\n//# sourceURL=webpack://EntryPoint/./jsons/aufgaben.json?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	__webpack_require__("./app/app.ts");
/******/ 	var __webpack_exports__ = __webpack_require__("./app/bin/app/app.js");
/******/ 	window.EntryPoint = __webpack_exports__;
/******/ 	
/******/ })()
;